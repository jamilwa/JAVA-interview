1. what is context switching? 
    Context switching is a process that occurs in when the operating system (OS) switches the processor from executing one thread or process to another. This switch involves saving the state of the currently running thread or process so that it can be resumed later, and loading the state of the new thread or process to be executed next.
    context switching is a fundamental concept in operating systems that allows for multitasking, concurrency, and efficient CPU utilization by enabling the OS to switch between different threads or processes running on a system.
2. Compare Wait()  and Sleep()
    both wait() and sleep() methods are used for pausing the execution of a thread, but they have different behaviors:
    wait() Method: The wait() method is defined in the Object class and is used for inter-thread communication in Java.When a thread calls the wait() method on an object, it releases the lock on the object and enters the waiting state until another thread notifies it.The wait() method must be called from within a synchronized block or method to avoid IllegalMonitorStateException.To wake up a waiting thread, another thread must call the notify() or notifyAll() method on the same object.
    sleep() Method: The sleep() method is a static method defined in the Thread class and is used to pause the execution of a thread for a specified amount of time.
    When a thread calls the sleep() method, it does not release the lock on any object, and other threads cannot acquire the lock during the sleep period.
    The sleep() method is typically used for introducing delays in the execution of a thread.
